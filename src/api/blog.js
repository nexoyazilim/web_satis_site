import apiClient from './client';

// Development: Vite proxy (/api) Ã¼zerinden; Production: gerÃ§ek URL
const API_BASE_URL = import.meta.env.DEV 
  ? '/api' 
  : (import.meta.env.VITE_API_URL || 'https://nexoyazilim-api.us-east-1.elasticbeanstalk.com');
const API_KEY = 'dev-local-key'; // Backend'de tanÄ±mlÄ± olan key
const SITE_ID = '5'; // demo-veteriner

const blogService = {
  // Blog ayarlarÄ±nÄ± getir
  async getBlogSettings() {
    try {
    const response = await apiClient.get('/blog/settings', {
        headers: {
          'Content-Type': 'application/json',
          'x-site-id': SITE_ID,
          'x-api-key': API_KEY
        }
      });
      return response.data;
    } catch (error) {
      console.error('Blog ayarlarÄ± yÃ¼klenemedi:', error);
      throw error;
    }
  },

  // Blog yazÄ±larÄ±nÄ± getir
  async getPosts(customerId = '4', category = null) {
    try {
      const params = { customer_id: customerId };
      if (category) params.category = category;
      
    const response = await apiClient.get('/blog/posts', {
        headers: {
          'Content-Type': 'application/json',
          'x-site-id': SITE_ID,
          'x-api-key': API_KEY
        },
        params
      });
      return response.data;
    } catch (error) {
      console.error('Blog yazÄ±larÄ± yÃ¼klenemedi:', error);
      throw error;
    }
  },

  // Tek blog yazÄ±sÄ± getir
  async getPost(slug, customerId = '4') {
    try {
    const response = await apiClient.get(`/blog/posts/slug/${slug}`, {
        headers: {
          'Content-Type': 'application/json',
          'x-site-id': SITE_ID,
          'x-api-key': API_KEY
        },
        params: { customer_id: customerId }
      });
      return response.data;
    } catch (error) {
      console.error('Blog yazÄ±sÄ± yÃ¼klenemedi:', error);
      throw error;
    }
  },

      // Yeni blog yazÄ±sÄ± oluÅŸtur
      async createPost(postData, customerId = '4') {
        try {
          const requestBody = {
            title: postData.title,
            content: postData.content,
            customer_id: parseInt(customerId), // Number olarak gÃ¶nder
            featured_image: postData.featured_image || '',
            description: postData.description || '',
            category: postData.category || 'Genel',
            is_published: postData.is_published !== undefined ? postData.is_published : true
          };
          
          console.log('ğŸ”µ CREATE POST REQUEST:', {
            url: '/blog/posts',
            body: requestBody,
            headers: {
              'x-site-id': SITE_ID,
              'x-api-key': API_KEY
            }
          });
          
          const response = await apiClient.post('/blog/posts', requestBody, {
            headers: {
              'x-site-id': SITE_ID,
              'x-api-key': API_KEY
            }
          });
          
          console.log('âœ… CREATE POST SUCCESS:', response.data);
          return response.data;
        } catch (error) {
          console.error('ğŸ”´ Blog yazÄ±sÄ± oluÅŸturulamadÄ±:', error);
          console.error('ğŸ”´ Error Response:', error.response?.data);
          console.error('ğŸ”´ Error Status:', error.response?.status);
          throw error;
        }
      },

  // Blog yazÄ±sÄ±nÄ± gÃ¼ncelle
  async updatePost(id, postData, customerId = '4') {
    try {
      const response = await apiClient.put(`/blog/posts/${id}`, {
        ...postData,
        customer_id: customerId
      }, {
        headers: {
          'x-site-id': SITE_ID,
          'x-api-key': API_KEY
        }
      });
      return response.data;
    } catch (error) {
      console.error('Blog yazÄ±sÄ± gÃ¼ncellenemedi:', error);
      throw error;
    }
  },

  // Blog yazÄ±sÄ±nÄ± sil
  async deletePost(id, customerId = '4') {
    try {
      const response = await apiClient.delete(`/blog/posts/${id}`, {
        headers: {
          'x-site-id': SITE_ID,
          'x-api-key': API_KEY
        },
        params: { customer_id: customerId }
      });
      return response.data;
    } catch (error) {
      console.error('Blog yazÄ±sÄ± silinemedi:', error);
      throw error;
    }
  },

  // Fallback: Statik blog verileri
  getFallbackPosts() {
    return [
      {
        id: 'fallback-1',
        title: 'Evcil HayvanÄ±nÄ±zÄ±n Beslenme Ä°htiyaÃ§larÄ±nÄ± Anlama',
        description: 'Evcil hayvanÄ±nÄ±zÄ±n yaÅŸÄ± ve Ä±rkÄ± iÃ§in doÄŸru yiyeceÄŸi nasÄ±l seÃ§eceÄŸinizi Ã¶ÄŸrenin.',
        content: 'DoÄŸru diyet seÃ§imi marka isimlerinden Ã§ok daha fazlasÄ±dÄ±r.\n\nYaÅŸam evresini (yavru/kedi, yetiÅŸkin, yaÅŸlÄ±) ve Ä±rka Ã¶zgÃ¼ ihtiyaÃ§larÄ± gÃ¶z Ã¶nÃ¼nde bulundurarak baÅŸlayÄ±n. Makro besinleri (protein, yaÄŸ, karbonhidrat) dengeleyin ve temel mikro besinleri (kediler iÃ§in taurin, cilt/tÃ¼y iÃ§in omega-3) saÄŸlayÄ±n.\n\nYeni diyetleri 7-10 gÃ¼n boyunca kademeli olarak tanÄ±tÄ±n ve mide rahatsÄ±zlÄ±ÄŸÄ±nÄ± Ã¶nlemek iÃ§in her zaman temiz su bulundurun. Ani kilo deÄŸiÅŸimi, donuk tÃ¼y veya halsizlik fark ederseniz veterinerinize danÄ±ÅŸÄ±n.',
        category: 'nutrition',
        slug: 'evcil-hayvan-beslenme-ihtiyaclari',
        is_published: true,
        created_at: new Date().toISOString()
      },
      {
        id: 'fallback-2',
        title: 'YaygÄ±n Evcil Hayvan SaÄŸlÄ±ÄŸÄ± Efsaneleri Ã‡Ã¼rÃ¼tÃ¼ldÃ¼',
        description: 'Evcil hayvanÄ±nÄ±zÄ±n saÄŸlÄ±ÄŸÄ± sÃ¶z konusu olduÄŸunda gerÃ§ekleri kurgudan ayÄ±rÄ±n.',
        content: 'Evcil hayvan saÄŸlÄ±ÄŸÄ± konusunda birÃ§ok efsane dolaÅŸÄ±mda. Ä°ÅŸte en yaygÄ±n olanlarÄ±:\n\n1. "Kediler her zaman dÃ¶rt ayak Ã¼zerine dÃ¼ÅŸer" - Bu doÄŸru deÄŸil, yÃ¼ksekten dÃ¼ÅŸen kediler ciddi yaralanmalar yaÅŸayabilir.\n\n2. "KÃ¶peklerin aÄŸzÄ± insanlardan daha temizdir" - KÃ¶peklerin aÄŸzÄ±nda zararlÄ± bakteriler bulunabilir.\n\n3. "Kuru mama diÅŸleri temizler" - Kuru mama diÅŸ temizliÄŸi saÄŸlamaz, dÃ¼zenli diÅŸ bakÄ±mÄ± gerekir.',
        category: 'health',
        slug: 'evcil-hayvan-sagligi-efsaneleri',
        is_published: true,
        created_at: new Date().toISOString()
      },
      {
        id: 'fallback-3',
        title: 'Evcil HayvanÄ±nÄ±zÄ± NasÄ±l EÄŸitirsiniz',
        description: 'Pozitif pekiÅŸtirme teknikleri ile evcil hayvanÄ±nÄ±zÄ± eÄŸitmenin yollarÄ±.',
        content: 'Evcil hayvan eÄŸitimi sabÄ±r ve tutarlÄ±lÄ±k gerektirir. Ä°ÅŸte temel prensipler:\n\n1. Pozitif pekiÅŸtirme kullanÄ±n - Ã–dÃ¼ller cezadan daha etkilidir\n2. TutarlÄ± olun - AynÄ± komutlarÄ± aynÄ± ÅŸekilde kullanÄ±n\n3. KÄ±sa seanslar yapÄ±n - 10-15 dakikalÄ±k eÄŸitimler yeterli\n4. SabÄ±rlÄ± olun - Her hayvan farklÄ± hÄ±zda Ã¶ÄŸrenir\n5. Profesyonel yardÄ±m alÄ±n - Gerekirse eÄŸitmen desteÄŸi alÄ±n',
        category: 'training',
        slug: 'evcil-hayvan-egitimi',
        is_published: true,
        created_at: new Date().toISOString()
      }
    ];
  }
};

export default blogService;

